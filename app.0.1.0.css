.streamerCard {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    font-size: 15px;
    justify-content: space-between;
}

#streamPlayerContainer {
    flex-grow: 1;
    min-width: 0;
    /* prevent flexbox from overflowing */
    padding-left: 10px;
    /* add some space between the containers */
    height: 100vh;
    overflow-y: auto;
    display: flex;
    flex-wrap: wrap;
    width: 100%;
}

#sidebarAndStreamPlayer {
    display: flex;
    justify-content: flex-start;
}

#leftNavContainer,
#streamPlayerContainer {
    /*flex: 1 1 0;*/
    margin-right: 10px;
}

#leftNavContainer {
    width: 240px;
}

#streamContainer {
    display: flex;
}

.streamerCard:hover {
    background-color: #2c3542;
}

.streamerCardLeftDetails {
    display: flex;
    align-items: center;
}

.text {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    white-space: nowrap;
    color: white;
    overflow: hidden;
    text-overflow: ellipsis;
}

.stream-row {
    display: flex;
    flex-wrap: wrap;
}

.stream-player {
    flex: 1 1 calc(50% - 1px);
}

.streamer-name,
.game-name {
    line-height: 1.2;
}

.game-name {
    font-size: 12px;
    overflow-wrap: break-word;
    max-width: 150px;
    overflow: hidden;
    text-overflow: ellipsis;
}

.stream-viewers {
    margin-left: 10px;
    min-width: fit-content;
    font-size: 8px;
    position: relative;
}

.streamer-img {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    margin-right: 10px;
}

.stream-link {
    text-decoration: none;
    color: #000;
    font-weight: bold;
}

.stream-link,
.video-link {
    text-decoration: none;
    color: white;
}

.stream-viewers,
.video-viewers {
    margin-left: 10px;
    color: white;
    font-size: 20px;
}

body {
    background: black;
    font-family: Arial, sans-serif;
}

.topNav {
    justify-content: left;
    display: flex;
    align-items: center;
    height: 77px;
    background-color: #2D2C2C;
    padding-left: 10px;
}

.video-item {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    font-size: 15px;
}

.video-thumbnail {
    border-radius: 50%;
    width: 30px;
    height: auto;
}

.profilePicContainer {
    display: inline-flex;
    margin-right: 6px;
    border: 3px solid #A172F7;
    border-radius: 50%;
    padding: 2px;
    position: relative;
    /* Use relative positioning */
    width: 30px;
    height: 30px;
}

/* Add these styles to the input[type="checkbox"] and label inside .profilePicContainer */
.profilePicContainer input[type="checkbox"] {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
    background-color: transparent;
    z-index: 1;
}

.profilePicContainer label {
    background-color: #fff;
    border: 1px solid #ccc;
    border-radius: 50%;
    cursor: pointer;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    /* Adjust this value to fine-tune vertical positioning */
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

.video-link {
    text-decoration: none;
    color: white;
}

.video-viewers {
    margin-left: 2px;
    color: white;
    font-size: 8px;
}

#leftNav {
    background-color: #1F2833;
    width: 240px;
    height: 100vh;
    padding-top: 10px;
    padding-left: 8px;
    padding-right: 8px;
    overflow-y: auto;
}

.stream-player {
    display: inline-block;
    box-sizing: border-box;
    width: calc(100% / 2);
    /* Initial width for two streams per line */
}

/* Add the custom round checkbox styles */
.round {
    position: relative;
}

.round label {
    border: 1px solid #ccc;
    border-radius: 50%;
    cursor: pointer;
    height: 28px;
    left: 0;
    position: absolute;
    top: 0;
    width: 28px;
}

.round label:after {
    border: 2px solid #fff;
    border-top: none;
    border-right: none;
    content: "";
    height: 6px;
    left: 7px;
    opacity: 0;
    position: absolute;
    top: 8px;
    transform: rotate(-45deg);
    width: 12px;
}

.round input[type="checkbox"] {
    visibility: hidden;
}

.round input[type="checkbox"]:checked+label {
    background-color: #66bb6a;
    border-color: #66bb6a;
}

.round input[type="checkbox"]:checked+label:after {
    opacity: 1;
}

#tabsContainer {
    display: flex;
    flex-direction: column;
    max-width: 300px;
    width: 100%;
}

#tabsContainer * {
    --primary-color: #185ee0;
    --secondary-color: #e6eef9;
}

#tabsContainer *,
#tabsContainer *:after,
#tabsContainer *:before {
    box-sizing: border-box;
}

/* Target the container for dynamically added tabs */
#tabMenu {
    display: flex;
    position: relative;
    background-color: #fff;
    box-shadow: 0 0 1px 0 rgba(24, 94, 224, 0.15), 0 6px 12px 0 rgba(24, 94, 224, 0.15);
    padding: 2%; /* Use percentage-based padding */
    border-radius: 99px; /* just a high number to create pill effect */
    width: 100%; /* Take up the full width of the parent */
    max-width: 100%; /* Limit to the parent's width */
}

/* Target the radio buttons within the dynamically added tabs */
#tabMenu input[type="radio"] {
    display: none;
}

/* Target the labels for the radio buttons within the dynamically added tabs */
#tabMenu .tab {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 10%; /* Set the height as a percentage */
    width: 90%; /* Use percentage-based width */
    font-size: 2%; /* Set the font size as a percentage */
    font-weight: 500;
    border-radius: 99px; /* just a high number to create pill effect */
    cursor: pointer;
    transition: color 0.15s ease-in;
}

/* Target the notification spans within the dynamically added tabs */
#tabMenu .notification {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 15%; /* Set the width as a percentage */
    height: 50%; /* Set the height as a percentage */
    margin-left: 1%; /* Use percentage-based margin */
    border-radius: 50%;
    background-color: var(--secondary-color);
    transition: 0.15s ease-in;
}

/* Apply styles when a radio button is checked within the dynamically added tabs */
#tabMenu input[type="radio"]:checked + label.tab {
    color: var(--primary-color);
}

#tabMenu input[type="radio"]:checked + label.tab > .notification {
    background-color: var(--primary-color);
    color: #fff;
}

/* Apply styles to the glider element */
#tabMenu input[id^="radio-"]:checked ~ .glider {
    transform: translateX(0);
}

/* Apply media query for smaller screens */
@media (max-width: 700px) {
    #tabMenu {
        transform: scale(0.6);
    }
}
